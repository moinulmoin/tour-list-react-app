{"version":3,"sources":["components/Tour.jsx","components/TourList.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Tour","name","image","info","price","id","handleClick","useState","readMore","setReadMore","isAlertOpen","setIsAlertOpen","setTimeout","className","src","alt","substring","role","tabIndex","onClick","Alert","type","url","process","TourList","tourInfo","setTourInfo","loading","setLoading","getData","a","fetch","response","json","data","useEffect","handleNotInterestedButton","tourId","newTourList","filter","tour","map","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAqDeA,MAnDf,YAA8D,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,YAC1C,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAOA,OANID,GACAE,YAAW,WACPD,GAAe,KAChB,MAIH,qBAAKE,UAAU,oBAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKC,IAAKZ,EAAOa,IAAKd,EAAMY,UAAU,iBACtC,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,8BAAf,SAA8CZ,IAC9C,sBAAKY,UAAU,YAAf,UACKL,EAAWL,EAAH,UAAaA,EAAKa,UAAU,EAAG,KAA/B,OACT,sBACIH,UAAU,eACVI,KAAK,SACLC,SAAS,KACTC,QAAS,WACLV,GAAaD,IALrB,SAQKA,EAAW,aAAe,kBAGnC,sBAAKK,UAAU,0BAAf,UACKH,GAAe,cAACU,EAAD,IAChB,yBACIC,KAAK,SACLR,UAAU,+BACVM,QAAS,kBAAMR,GAAgBD,IAHnC,oBAKYN,EALZ,UAOA,wBACIiB,KAAK,SACLR,UAAU,4BACVM,QAAS,kBAAMb,EAAYD,IAH/B,wCAgBxB,SAASe,IACL,OAAO,mBAAGP,UAAU,qBAAb,sDCrDX,IAAMS,EAAG,UAAMC,8CAoDAC,MAlDf,WACI,MAAgCjB,mBAAS,IAAzC,mBAAOkB,EAAP,KAAiBC,EAAjB,KACA,EAA8BnB,oBAAS,GAAvC,mBAAOoB,EAAP,KAAgBC,EAAhB,KACMC,EAAO,uCAAG,8BAAAC,EAAA,sEACWC,MAAMT,GADjB,cACNU,EADM,gBAEOA,EAASC,OAFhB,OAENC,EAFM,OAGZR,EAAYQ,GACZN,GAAW,GAJC,2CAAH,qDAMbO,qBAAU,WACNN,MACD,IAEH,IAAMO,EAA4B,SAACC,GAC/B,IAAMC,EAAcb,EAASc,QAAO,SAACC,GAAD,OAAUA,EAAKnC,KAAOgC,KAC1DX,EAAYY,IAEhB,OACI,qCACKX,EACG,oBAAId,UAAU,cAAd,wBAEAY,EAASgB,KAAI,SAACD,GACV,IAAQnC,EAAiCmC,EAAjCnC,GAAIJ,EAA6BuC,EAA7BvC,KAAME,EAAuBqC,EAAvBrC,KAAMD,EAAiBsC,EAAjBtC,MAAOE,EAAUoC,EAAVpC,MAC/B,OACI,cAAC,EAAD,CAEIC,GAAIA,EACJJ,KAAMA,EACNC,MAAOA,EACPE,MAAOA,EACPD,KAAMA,EACNG,YAAa8B,GANR/B,MAWA,IAApBoB,EAASiB,SAA4B,IAAZf,EACtB,wBACId,UAAU,wCACVQ,KAAK,SACLF,QAAS,kBAAMU,KAHnB,6BAOA,SCpCDc,MAXf,WACI,OACI,sBAAK9B,UAAU,YAAf,UACI,oBAAIA,UAAU,6BAAd,uBACA,qBAAKA,UAAU,MAAf,SACI,cAAC,EAAD,UCID+B,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.081e6467.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Tour({ name, image, info, price, id, handleClick }) {\r\n    const [readMore, setReadMore] = useState(false);\r\n    const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n    if (isAlertOpen) {\r\n        setTimeout(() => {\r\n            setIsAlertOpen(false);\r\n        }, 1500);\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-md-6 col-lg-4\">\r\n            <div className=\"card\">\r\n                <img src={image} alt={name} className=\"card-img-top\" />\r\n                <div className=\"card-body\">\r\n                    <div className=\"card-title font-weight-bold\">{name}</div>\r\n                    <div className=\"card-text\">\r\n                        {readMore ? info : `${info.substring(0, 200)}...`}\r\n                        <span\r\n                            className=\"text-primary\"\r\n                            role=\"button\"\r\n                            tabIndex=\"-1\"\r\n                            onClick={() => {\r\n                                setReadMore(!readMore);\r\n                            }}\r\n                        >\r\n                            {readMore ? ' show less' : ' read more'}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"card-footer text-center\">\r\n                        {isAlertOpen && <Alert />}\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-primary mt-3\"\r\n                            onClick={() => setIsAlertOpen(!isAlertOpen)}\r\n                        >\r\n                            Price: {price} USD\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary mt-3 ml-3\"\r\n                            onClick={() => handleClick(id)}\r\n                        >\r\n                            Not Interested\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tour;\r\n\r\nfunction Alert() {\r\n    return <p className=\"alert alert-danger\">Really Bro? Please go back to your work!</p>;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Tour from './Tour';\r\n\r\nconst url = `${process.env.REACT_APP_API_URL}`;\r\n\r\nfunction TourList() {\r\n    const [tourInfo, setTourInfo] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const getData = async () => {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setTourInfo(data);\r\n        setLoading(false);\r\n    };\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    const handleNotInterestedButton = (tourId) => {\r\n        const newTourList = tourInfo.filter((tour) => tour.id !== tourId);\r\n        setTourInfo(newTourList);\r\n    };\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <h3 className=\"text-center\">Loading...</h3>\r\n            ) : (\r\n                tourInfo.map((tour) => {\r\n                    const { id, name, info, image, price } = tour;\r\n                    return (\r\n                        <Tour\r\n                            key={id}\r\n                            id={id}\r\n                            name={name}\r\n                            image={image}\r\n                            price={price}\r\n                            info={info}\r\n                            handleClick={handleNotInterestedButton}\r\n                        />\r\n                    );\r\n                })\r\n            )}\r\n            {tourInfo.length === 0 && loading === false ? (\r\n                <button\r\n                    className=\"btn btn-primary btn-block text-center\"\r\n                    type=\"button\"\r\n                    onClick={() => getData()}\r\n                >\r\n                    Reload All Info\r\n                </button>\r\n            ) : null}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TourList;\r\n","import React from 'react';\nimport TourList from './components/TourList';\n\nfunction App() {\n    return (\n        <div className=\"container\">\n            <h1 className=\"display-3 text-center my-3\">Tour List</h1>\n            <div className=\"row\">\n                <TourList />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}